// 1) Дан массив [‘Mike’, ‘Johnson’, 25];
// С помощью деструктуризации, присвоить данные массива переменным firstName, lastName, age;
// C помощью шаблонной строки вывести:
//     ‘Привет, меня зовут Mike, фамилия Johnson, мне 25 лет’
// 2) Дан объект
// let user = {
//     name: ‘Mike’
// 	age: 50,
//         info: {
//     eyes: ‘green’,
//     skin: ‘white’
// }
// }
// С помощью деструктуризации, присвоить свойства объекта переменным, переменную name вывести как firstName.
//     C помощью шаблонной строки вывести данные о юзере в произвольном порядке
//

// Сделать проверку, если переменная равна ‘hidden’, присвоить ей значение ‘visible’, иначе ‘hidden’.
// Записать тоже самое через тернарный оператор.
//     Используя if записать условие
// 1) Если переменная равна нулю, присвоить ей значение 1
// 2) Если меньше нуля – присвоить строку ‘значение меньше нуля’
// 3) Если больше нуля – с помощью оператора присваивания переменную умножить на 10 (использовать короткую запись);
// После сделать это решение и через тернарный оператор

// Чему равно а, почему?
//     let a = 0 || ‘string’;
// let a = 1 && ‘string’;
// let a = null || 25;
// let a = null && 25;
// let a = null || 0 || 35;
// let a = null && 0 || 35;
//
// Что отобразится в консоле, почему?
//     12 + 14 + ‘12’
// 3 + 2 – ‘1’
// ‘3’ + 2 – 1
// true + 2
// +‘10’ + 1
// undefined + 2
// null + 5
// true + undefined
// +’’ + 10

//  Опишите, что тут происходит
// let arr = [2,2,2,2].map(parseInt)

let array = ['Mike', "Johnson", 25];
let [firstName, lastName, age] = array;
console.log(`Привет, меня зовут ${firstName}, фамилия ${lastName}, мне ${age} лет`);

let user = {
    name: "Mike",
    Age: 50,
    info: {
        eyes: "green",
        skin: "white"
    }
};

let {name: first_Name, Age, info: {eyes, skin}} = user;
console.log(`Имя - ${first_Name}\nВозраст - ${Age}\nЦвет глаз - ${eyes}\nЦвет кожи - ${skin}`);

let variable;
if (variable === "hidden") {
    variable = "visible"
} else {
    variable = "hidden"
}
console.log(variable);

/* через тернарный оператор*/
let Variable;
let val = (Variable === "hidden") ? "visible" : "hidden";
console.log(val);

let num = 6;
if (num === 0) {
    num = 1;
} else if (num < 0) {
    num = "значение меньше нуля"
} else if (num > 0) {
    num *= 10;
}
console.log(num);

/*через тренарный оператор*/
let Num = -2;
let number = (Num === 0) ? 1 : (Num < 0) ? "значение меньше нуля" : Num *= 10;
console.log(number);

let a = 0 || 'string';//a=string, при || и когда значения не true, выведет последнее значение
let a1 = 1 && 'string';//a=string, при && и когда значения не false, выведет последнее значение
let a2 = null || 25;//a=25, запинается на первой правде
let a3 = null && 25;// a=null, запинается на лжи
let a4 = null || 0 || 35;//a=35, запинается на первой правде
let a5 = null && 0 || 35;//a=35, сначало выполняется &&, затем ||, так как или запинается на правде, то a=35


let b = 12 + 14 + '12';//b=2612, сначало выполнится сложение чисел, а затем сумма сложится со строкой
let b1 = 3 + 2 - '1';//b=4, сначало сложение, а затем отнимание от строки(выполняется как и обычное отнимание)
let b2 = '3' + 2 - 1;//b=31, сначало сложение строки с числом =32, затем 32 - 1
let b3 = true + 2;//b=3, true=1, 1+2=3
let b4 = +'10' + 1;//b=11, +преобразовал строку "10" к числу и выполнилось сложение чисел
let b5 = undefined + 2;//b=Nan, undefined=Nan, Nan+2=Nan
let b6 = null + 5;//b=5, null=0, 0+5=5
let b7 = true + undefined;//b=Nan, true=1,undefined=Nan, 1+Nan=Nan
let b8 = +'' + 10;//b=10, +''-преобразовал к 0, 0+10=10


/* map передает 3 аргумента (элемент, индекс, массив). ParseInt занимает 2 аргумента, 2 ой это система счисления и получается,
что 2ой и 3ий элемент массива будут обработаны в единичной и двоичной системе счисления и parseInt от них вернет NaN. */
let arr = [2, 2, 2, 2].map(parseInt);
console.log(arr);



