/*Дата*/
// 1) Написать функцию, которая принимает год, а возвращает день 1го января этого года. День недели должен быть в русском формате.
// Например 2018 год – 1е января это “понедельник”.
// 2) Написать функцию, которая принимает дату в виде строки “29.03.1985”, а возвращает день в русском формате
// (например, для указанной даты это будет “пятница”). Известно, что формат даты в строке всегда “дд.мм.гггг”
// 3) Узнать, сколько прошло полных недель с начала года (от 1го января 2018) до сегодняшней даты.


/*1*/
function date(year) {
    let day = ['1-ое января это воскресенье', '1-ое января это понедельник', '1-ое января это вторник', '1-ое января это среда',
        '1-ое января это четверг', '1-ое января это пятница', '1-ое января это суббота'];
    year = new Date(year, 0, 1);
    return day[year.getDay()]
}

/*2*/
function Day(date) {
    let day = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суботта'];
    date = date.split('.');
    let dd = date[0];
    let mm = date[1] - 1;
    let yy = date[2];
    let newDate = new Date(yy, mm, dd);
    return day[newDate.getDay()];
}

/*3*/
let Jan1 = new Date(2018, 0, 1);
let now = new Date();
let week = (now - Jan1);
let msInWeek = 604800000;
console.log(Math.floor(week / msInWeek));


/*Время*/
// 1) Напишите код, который будет выводить в консоль строку, начиная с одной буквы и добавляя по одному символу каждые 200 мс:
// К примеру слово `test`:       `t`  `te`  `tes`  `test`
// 2) Создайте строку, которая принимает строку и время в секундах. При вызове функции она должна показать (console.log)
// переданный текст через заданное количество секунд. Пример: myFunc(`Hello!`, 1); в консоле появится `Hello!` через 1000 мс


/*1*/
let str = 'test';
let counter = 1;
let Timer = setInterval(function () {
    if (counter <= str.length) {
        console.log(str.slice(0, counter));
        counter++;
    } else {
        clearInterval(Timer);
    }

}, 200);


/*2*/
function Myfunc(string, time) {
    let obj;
    obj = setTimeout(function () {
        console.log(string);
    }, time * 1000);
    return obj;
}

Myfunc('Hello', 2);


/*3*/
// В чем разница между двумя реализациями? Они одинаковы по продолжительности? Если нет, почему?

/*1) Разница в том, что первый вариант использует рекурсию таймера, ф-я countDown проверяет index на истину
* и вызывает снова через 200мс, пока индекс не будет ложью.
 *2) Во втором случае у нас используется интервал который запускается через каждые 200мс, пока индекс не станет ложью
 * и потом очищается.
 * Время в setInterval проходит с учетом выполнение и отсчет идет с начала выполнения, а в setTimeout, отсчет идет после того,
  * как блок с кодом выполнился*/
let index = 10000;
setTimeout(function countDown() {
    if (index--) {
        // console.log(index);
        setTimeout(countDown, 200);
    } else {
        console.log('Boom!');
    }
}, 200);

let index2 = 10000;
let timer = setInterval(function () {
    if (index2--) {
        // console.log(index);
    } else {
        console.log('Boom!');
        clearInterval(timer);
    }
}, 200);
